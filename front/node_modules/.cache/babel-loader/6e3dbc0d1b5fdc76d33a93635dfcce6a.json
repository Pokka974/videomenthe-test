{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pokka\\\\Desktop\\\\DEV\\\\videomenthe-test\\\\front\\\\src\\\\components\\\\UploadForm.tsx\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Button, Toast } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UploadForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateFile = file => {\n      console.log(file);\n      this.setState(state => ({\n        file\n      }));\n    };\n\n    this.sendVideo = async e => {\n      e.preventDefault();\n      const video = new FormData();\n      video.append('video', this.state.file);\n      const success = await axios.post('http://localhost:8000/upload/', video);\n\n      if (success) {\n        this.setState(state => ({\n          successToast: true\n        }));\n      }\n\n      this.setState(state => ({\n        file: {}\n      }));\n    };\n\n    this.state = {\n      file: {},\n      successToast: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid px-5\",\n      children: [this.state.successToast && /*#__PURE__*/_jsxDEV(Toast, {\n        onClose: () => {\n          this.setState(() => ({\n            successToast: false\n          }));\n        },\n        children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"holder.js/20x20?text=%20\",\n            className: \"rounded me-2\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"me-auto\",\n            children: \"Bootstrap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"11 mins ago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n          children: \"Success !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formFileLg\",\n        className: \"mb-3 flex\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Selectionnez le ou les fichiers \\xE0 compresser:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => {\n            if (!e.currentTarget.files) {\n              return;\n            }\n\n            const file = e.currentTarget.files[0];\n\n            if (file.type.includes('video')) {\n              this.updateFile(file);\n            } else {\n              window.alert('Seulement les fichiers vidéos sont acceptés');\n              e.target.value = '';\n            }\n          },\n          className: \"mb-2\",\n          type: \"file\",\n          size: \"lg\",\n          name: \"video\",\n          multiple: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.sendVideo,\n          className: \"btn-success\",\n          type: \"submit\",\n          children: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Pokka/Desktop/DEV/videomenthe-test/front/src/components/UploadForm.tsx"],"names":["axios","React","Component","Button","Toast","Form","UploadForm","constructor","props","updateFile","file","console","log","setState","state","sendVideo","e","preventDefault","video","FormData","append","success","post","successToast","render","currentTarget","files","type","includes","window","alert","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport { Button, Toast } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Video from '../interfaces/Video'\r\nimport VideosProps from '../interfaces/VideosProps'\r\n\r\nexport default class UploadForm extends Component<{videoList: Video[], updateVideoList: void}, {file: File, successToast: boolean}> {\r\n\r\n     constructor(props: any) {\r\n          super(props)\r\n          this.state = {\r\n               file : {} as File,\r\n               successToast : false\r\n          }\r\n     }\r\n\r\n     updateFile = (file: File) => {\r\n          console.log(file);\r\n          this.setState((state) => ({file}))\r\n     }\r\n\r\n     sendVideo = async (e : React.MouseEvent<HTMLButtonElement>) => {\r\n          e.preventDefault()\r\n\r\n          const video : FormData = new FormData()\r\n\r\n          video.append('video', this.state.file)\r\n\r\n          const success = await axios.post('http://localhost:8000/upload/', video)\r\n          if (success) {\r\n               this.setState((state) => ({ successToast : true }))\r\n              \r\n          }\r\n          this.setState((state) => ({ file: {} as File}))\r\n     }\r\n\r\n     render() {\r\n          return (\r\n               <div className='container-fluid px-5'>\r\n                    { this.state.successToast && (\r\n                         <Toast onClose={() => {\r\n                              this.setState(() => ({ successToast: false }))\r\n                         }}>\r\n                              <Toast.Header>\r\n                                   <img src=\"holder.js/20x20?text=%20\" className=\"rounded me-2\" alt=\"\" />\r\n                                   <strong className=\"me-auto\">Bootstrap</strong>\r\n                                   <small>11 mins ago</small>\r\n                              </Toast.Header>\r\n                              <Toast.Body>Success !</Toast.Body>\r\n                         </Toast>\r\n                    )}\r\n                    <Form.Group controlId=\"formFileLg\" className=\"mb-3 flex\">\r\n                         <Form.Label>Selectionnez le ou les fichiers à compresser:</Form.Label>\r\n                         <Form.Control onChange={ (e: React.ChangeEvent<HTMLInputElement>)  => {\r\n                              if(!e.currentTarget.files) { return }\r\n                              \r\n                              const file = e.currentTarget.files[0]\r\n                              if (file.type.includes('video')) {\r\n                                   this.updateFile(file)\r\n                              } else {\r\n                                   window.alert('Seulement les fichiers vidéos sont acceptés')\r\n                                   e.target.value = ''\r\n                              }\r\n                         } } className='mb-2' type=\"file\" size=\"lg\" name='video' multiple/>\r\n                         <Button onClick={this.sendVideo} className='btn-success' type=\"submit\">Envoyer</Button>\r\n                    </Form.Group>\r\n               </div>\r\n               \r\n          )\r\n     }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}