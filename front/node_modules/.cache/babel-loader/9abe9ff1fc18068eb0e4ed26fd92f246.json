{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pokka\\\\Desktop\\\\DEV\\\\videomenthe-test\\\\front\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport UploadForm from './components/UploadForm';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport VideoList from './components/VideoList';\nimport { useEffect, useState } from 'react';\nimport extractFiles from \"extract-files/extractFiles.mjs\";\nimport isExtractableFile from \"extract-files/isExtractableFile.mjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [allVideos, setAllVideos] = useState([]);\n  useEffect(() => {\n    // const fetchData = async () => {\n    //   const res = await axios.get('http://localhost:8000/files/')\n    //   if (res) { \n    //     console.log(b64toBlob(res.data));\n    //     // fileDownload(blobData, 'example.zip')\n    //     saveAs(res.data, 'videosArchive.zip')\n    //   }\n    // }\n    const fetchData = async () => {\n      const res = await fetch('http://localhost:8000/files/');\n\n      if (res) {\n        const blob = await res.blob();\n        console.log(__filename);\n        const {\n          clone,\n          files\n        } = extractFiles({\n          a: blob\n        }, isExtractableFile, 'prefix');\n        console.log(clone);\n        console.log(files); // saveAs(blob, 'C:/Users/Pokka/Desktop/DEV/videomenthe-test/front/public/videos/videoArchive.zip')\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container-fluid d-flex flex-column align-items-center justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(UploadForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ziGD+5/YjxMICWyYN3MYSy+ebWE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Pokka/Desktop/DEV/videomenthe-test/front/src/App.tsx"],"names":["UploadForm","VideoList","useEffect","useState","extractFiles","isExtractableFile","App","allVideos","setAllVideos","fetchData","res","fetch","blob","console","log","__filename","clone","files","a"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAO,sCAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;;;AACA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAO;AAEf;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAMO,SAAS,GAAG,YAAY;AAC5B,YAAMC,GAAc,GAAI,MAAMC,KAAK,CAAC,8BAAD,CAAnC;;AACA,UAAID,GAAJ,EAAS;AACP,cAAME,IAAW,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAA1B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AAEA,cAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAmBb,YAAY,CAAC;AAACc,UAAAA,CAAC,EAAEN;AAAJ,SAAD,EAAYP,iBAAZ,EAA+B,QAA/B,CAArC;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ,EANO,CAOP;AACD;AACF,KAXD;;AAaAR,IAAAA,SAAS;AAEV,GA1BQ,EA0BN,EA1BM,CAAT;AA4BA,sBACE;AAAM,IAAA,SAAS,EAAC,8EAAhB;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAvCQH,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import UploadForm from './components/UploadForm';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport VideoList from './components/VideoList';\nimport { useEffect, useState } from 'react';\nimport { saveAs } from 'file-saver';\nimport extractFiles from \"extract-files/extractFiles.mjs\";\nimport isExtractableFile from \"extract-files/isExtractableFile.mjs\";\nfunction App() {\n  \n  const [allVideos, setAllVideos] = useState([])\n\n  useEffect(()  => {\n\n    // const fetchData = async () => {\n    //   const res = await axios.get('http://localhost:8000/files/')\n\n    //   if (res) { \n    //     console.log(b64toBlob(res.data));\n    //     // fileDownload(blobData, 'example.zip')\n    //     saveAs(res.data, 'videosArchive.zip')\n    //   }\n    // }\n    const fetchData = async () => {\n      const res : Response =  await fetch('http://localhost:8000/files/')\n      if (res) {\n        const blob : Blob = await res.blob()\n        console.log(__filename);\n\n        const { clone, files } = extractFiles({a: blob}, isExtractableFile, 'prefix')\n        console.log(clone);\n        console.log(files);\n        // saveAs(blob, 'C:/Users/Pokka/Desktop/DEV/videomenthe-test/front/public/videos/videoArchive.zip')\n      }\n    }\n    \n    fetchData()\n\n  }, [])\n\n  return (\n    <main className='container-fluid d-flex flex-column align-items-center justify-content-center'>\n      <UploadForm />\n      <VideoList />\n      {/* VideoPlayer */}\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}