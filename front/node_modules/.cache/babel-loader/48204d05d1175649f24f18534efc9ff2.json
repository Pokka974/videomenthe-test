{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pokka\\\\Desktop\\\\DEV\\\\videomenthe-test\\\\front\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport UploadForm from './components/UploadForm';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport VideoList from './components/VideoList';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import extract from 'extract-zip'\n// const extract = require('extract-zip')\nfunction App() {\n  _s();\n\n  const [allVideos, setAllVideos] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch('http://localhost:8000/files/');\n\n      if (res) {\n        const blob = await res.blob();\n        const file = new File([blob], 'videosArchives.zip');\n\n        try {// await extract(file.name, { dir: '../public/videos/' })\n          // zip.loadAsync(file)\n          // .then(console.log)\n        } catch (err) {// handle any errors\n        } // saveAs(blob, 'C:/Users/Pokka/Desktop/DEV/videomenthe-test/front/public/videos/videoArchive.zip')\n\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container-fluid d-flex flex-column align-items-center justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(UploadForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ziGD+5/YjxMICWyYN3MYSy+ebWE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Pokka/Desktop/DEV/videomenthe-test/front/src/App.tsx"],"names":["UploadForm","VideoList","useEffect","useState","App","allVideos","setAllVideos","fetchData","res","fetch","blob","file","File","err"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAO,sCAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAGA;AAEA;AACA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAO;AACf,UAAMK,SAAS,GAAG,YAAY;AAC5B,YAAMC,GAAc,GAAI,MAAMC,KAAK,CAAC,8BAAD,CAAnC;;AACA,UAAID,GAAJ,EAAS;AACP,cAAME,IAAW,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAA1B;AACA,cAAMC,IAAW,GAAG,IAAIC,IAAJ,CAAS,CAACF,IAAD,CAAT,EAAiB,oBAAjB,CAApB;;AACA,YAAI,CACF;AACA;AACA;AACD,SAJD,CAIE,OAAOG,GAAP,EAAY,CACZ;AACD,SATM,CAUP;;AACD;AACF,KAdD;;AAgBAN,IAAAA,SAAS;AAEV,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,sBACE;AAAM,IAAA,SAAS,EAAC,8EAAhB;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhCQH,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import UploadForm from './components/UploadForm';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport VideoList from './components/VideoList';\nimport { useEffect, useState } from 'react';\nimport zip from 'jszip'\n\n// import extract from 'extract-zip'\n\n// const extract = require('extract-zip')\nfunction App() {\n  \n  const [allVideos, setAllVideos] = useState([])\n\n  useEffect(()  => {\n    const fetchData = async () => {\n      const res : Response =  await fetch('http://localhost:8000/files/')\n      if (res) {\n        const blob : Blob = await res.blob()\n        const file : File = new File([blob], 'videosArchives.zip') \n        try {\n          // await extract(file.name, { dir: '../public/videos/' })\n          // zip.loadAsync(file)\n          // .then(console.log)\n        } catch (err) {\n          // handle any errors\n        }\n        // saveAs(blob, 'C:/Users/Pokka/Desktop/DEV/videomenthe-test/front/public/videos/videoArchive.zip')\n      }\n    }\n    \n    fetchData()\n\n  }, [])\n\n  return (\n    <main className='container-fluid d-flex flex-column align-items-center justify-content-center'>\n      <UploadForm />\n      <VideoList />\n      {/* VideoPlayer */}\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}