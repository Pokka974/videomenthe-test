{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pokka\\\\Desktop\\\\DEV\\\\videomenthe-test\\\\front\\\\src\\\\components\\\\VideoPlayer.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { Ratio } from 'react-bootstrap';\nimport { FaPlay } from 'react-icons/fa';\nimport { FaPause } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VideoPlayer(_ref) {\n  _s();\n\n  let {\n    video\n  } = _ref;\n  const videoRef = useRef();\n  const [isPlaying, setIsPlaying] = useState(true);\n  const pathToVideo = `http://localhost:8000/files/${video}`;\n\n  const playPause = () => {\n    if (videoRef.current.paused) {\n      videoRef.current.play();\n      setIsPlaying(true);\n    } else {\n      videoRef.current.pause();\n      setIsPlaying(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Ratio, {\n      aspectRatio: \"16x9\",\n      className: \"w-50 my-3 \",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        playsInline: true,\n        autoPlay: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: pathToVideo,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn success\",\n      onClick: playPause,\n      children: !isPlaying ? /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 35\n      }, this) : /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VideoPlayer, \"HM2sSZWpwJQVhBAL1Ogn2j7f+aU=\");\n\n_c = VideoPlayer;\nexport default VideoPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"sources":["C:/Users/Pokka/Desktop/DEV/videomenthe-test/front/src/components/VideoPlayer.tsx"],"names":["useRef","useState","Ratio","FaPlay","FaPause","VideoPlayer","video","videoRef","isPlaying","setIsPlaying","pathToVideo","playPause","current","paused","play","pause"],"mappings":";;;AAAA,SAA2BA,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAAQC,MAAR,QAAqB,gBAArB;AACA,SAAQC,OAAR,QAAsB,gBAAtB;;;;AACA,SAASC,WAAT,OAAoC;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC/B,QAAMC,QAAQ,GAAGP,MAAM,EAAvB;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAU,IAAV,CAA1C;AAEA,QAAMS,WAAoB,GAAI,+BAA8BJ,KAAM,EAAlE;;AAEA,QAAMK,SAAS,GAAG,MAAM;AACnB,QAAIJ,QAAQ,CAACK,OAAT,CAAiBC,MAArB,EAA6B;AACxBN,MAAAA,QAAQ,CAACK,OAAT,CAAiBE,IAAjB;AACAL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACJ,KAHD,MAGO;AACFF,MAAAA,QAAQ,CAACK,OAAT,CAAiBG,KAAjB;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACJ;AACL,GARD;;AAUA,sBACK;AAAA,4BACK,QAAC,KAAD;AAAO,MAAA,WAAW,EAAC,MAAnB;AAA0B,MAAA,SAAS,EAAC,YAApC;AAAA,6BACK;AAAO,QAAA,GAAG,EAAEF,QAAZ;AAAsB,QAAA,WAAW,MAAjC;AAAkC,QAAA,QAAQ,MAA1C;AAAA,+BACK;AAAQ,UAAA,GAAG,EAAEG,WAAb;AAA0B,UAAA,IAAI,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YADL,eAMK;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAEC,SAAzC;AAAA,gBACM,CAACH,SAAD,gBAAa,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAb,gBAA0B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADhC;AAAA;AAAA;AAAA;AAAA,YANL;AAAA,kBADL;AAYD;;GA5BKH,W;;KAAAA,W;AA8BT,eAAeA,WAAf","sourcesContent":["import { MutableRefObject, useRef, useState } from 'react'\r\nimport { Ratio } from 'react-bootstrap'\r\nimport {FaPlay} from 'react-icons/fa'\r\nimport {FaPause} from 'react-icons/fa'\r\nfunction VideoPlayer({video} : any) {\r\n     const videoRef = useRef() as MutableRefObject<HTMLVideoElement>\r\n     const [isPlaying, setIsPlaying] = useState<boolean>(true)\r\n\r\n     const pathToVideo : string = `http://localhost:8000/files/${video}`\r\n\r\n     const playPause = () => {\r\n          if (videoRef.current.paused) {\r\n               videoRef.current.play()\r\n               setIsPlaying(true)\r\n          } else {\r\n               videoRef.current.pause()\r\n               setIsPlaying(false)\r\n          }\r\n     }\r\n\r\n     return (\r\n          <>\r\n               <Ratio aspectRatio='16x9' className='w-50 my-3 '>\r\n                    <video ref={videoRef} playsInline autoPlay>\r\n                         <source src={pathToVideo} type=\"video/mp4\" />\r\n                    </video>\r\n               </Ratio>\r\n               <button className='btn success' onClick={playPause}>\r\n                    {!isPlaying ? <FaPlay /> : <FaPause />}\r\n               </button>\r\n          </>\r\n     )\r\n   }\r\n\r\nexport default VideoPlayer"]},"metadata":{},"sourceType":"module"}